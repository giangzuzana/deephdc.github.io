<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>DEEP Open Catalog</title><link href="/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>/</id><updated>2018-12-21T00:00:00+01:00</updated><entry><title>DEEP Generic Container</title><link href="/models/deep-generic-container.html" rel="alternate"></link><published>2018-07-03T10:20:00+02:00</published><updated>2018-12-04T00:00:00+01:00</updated><author><name>DEEP-Hybrid-DataCloud Consortium</name></author><id>tag:None,2018-07-03:/models/deep-generic-container.html</id><summary type="html">&lt;p&gt;A generic container that can serve as an example project,
without real functionality&lt;/p&gt;</summary><content type="html">&lt;p&gt;The DEEP-OC-generic-container model provides no functionality, as it is rather
a boilerplate repository that can serve as an example.&lt;/p&gt;
&lt;p&gt;It provides a Dockerfile template allowing to run several DEEP applications in
the same Docker container.&lt;/p&gt;</content></entry><entry><title>DEEP OC Conus Classification (Theano)</title><link href="/models/deep-oc-conus-classification-theano.html" rel="alternate"></link><published>2018-07-03T10:20:00+02:00</published><updated>2018-12-21T00:00:00+01:00</updated><author><name>DEEP-Hybrid-DataCloud Consortium</name></author><id>tag:None,2018-07-03:/models/deep-oc-conus-classification-theano.html</id><summary type="html">&lt;p&gt;A trained ResNet50 on Theano to classify conus marine snails.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://jenkins.indigo-datacloud.eu:8080/job/Pipeline-as-code/job/DEEP-OC-org/job/DEEP-OC-conus-classification/job/master"&gt;&lt;img alt="Build Status" src="https://jenkins.indigo-datacloud.eu:8080/buildStatus/icon?job=Pipeline-as-code/DEEP-OC-org/DEEP-OC-plant-classification-theano/master"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Citizen science has become a powerful force for scientific inquiry, providing researchers with access to a vast array of data points while connecting non scientists to the real process of science. This citizen-researcher relationship creates a very interesting synergy, allowing for the creation, execution, and analysis of research projects. With this in mind, a Convolutional Neural Network using ResNet50 has been trained to identify conus marine snails at species level [1] in collaboration with the Museo de Ciencias Naturales in Madrid &lt;a href="http://www.mncn.csic.es/"&gt;2&lt;/a&gt;. 
The taxonomy of these snails has changed significantly several times during recent years and the introduction of Deep Learning techniques allowing to classify them is a very valuable tool for the experts.This Docker container contains a trained Convolutional Neural network optimized for conus snails identification using images. The architecture used is a Resnet50 [3] using Lasagne on top of Theano. The training dataset has been provided by the Museo de Ciencias Naturales de Madrid and it consists on a dataset containing images of 68 species of conus covering three different regions: Panamic region South African region Western atlantic and mediterranean region.&lt;/p&gt;
&lt;h2&gt;References:&lt;/h2&gt;
&lt;p&gt;[1]: Puillandre, N.; Duda, T.F.; Meyer, C.; Olivera, B.M.; Bouchet, P. (2014). "One, four or 100 genera? A new classification of the cone snails". Journal of Molluscan Studies. 81 (1): 1–23.  doi:10.1093/mollus/eyu055. PMC 4541476. PMID 26300576.&lt;/p&gt;
&lt;p&gt;[3]: He, K., Zhang, X., Ren, S., &amp;amp; Sun, J. (2016). Deep residual learning for image recognition. In Proceedings of the IEEE conference on computer vision and pattern recognition (pp. 770-778)&lt;/p&gt;</content></entry><entry><title>DEEP OC dogs breed determination</title><link href="/models/deep-oc-dogs-breed-determination.html" rel="alternate"></link><published>2018-07-03T10:20:00+02:00</published><updated>2018-11-26T00:00:00+01:00</updated><author><name>DEEP-Hybrid-DataCloud Consortium</name></author><id>tag:None,2018-07-03:/models/deep-oc-dogs-breed-determination.html</id><summary type="html">&lt;p&gt;A toy example to identify Dog's breed.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://jenkins.indigo-datacloud.eu:8080/job/Pipeline-as-code/job/DEEP-OC-org/job/dogs_breed_det/job/master/"&gt;&lt;img alt="Build Status" src="https://jenkins.indigo-datacloud.eu:8080/buildStatus/icon?job=Pipeline-as-code/DEEP-OC-org/dogs_breed_det/master"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A toy example to identify Dog's breed, "Dogs breed detector", as example for &lt;a href="https://github.com/indigo-dc/DEEPaaS"&gt;DEEPaaS API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Dogs breed detector is originally forked from &lt;a href="https://github.com/udacity/dog-project"&gt;udacity/dogs-project&lt;/a&gt;, dataset comes from &lt;a href="https://s3-us-west-1.amazonaws.com/udacity-aind/dog-project/dogImages.zip"&gt;dog dataset&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The project applies Transfer learning for dog's breed identification, implemented with Tensorflow and Keras:&lt;/p&gt;
&lt;p&gt;From a pre-trained model (VGG16 | VGG19 | Resnet50 | InceptionV3 | Xception) the last layer is removed, then a new FC classification layer is added, which is trained. All images first pass through the pre-trained network and converted into the tensor with the shape of the 'before-last' layer of the pre-trained network, into so-called 'bottleneck_features'. These bottleneck_features are used then as input for the FC classification network.&lt;/p&gt;</content></entry><entry><title>DEEP OC Plant Classification (Theano)</title><link href="/models/deep-oc-plant-classification-theano.html" rel="alternate"></link><published>2018-07-03T10:20:00+02:00</published><updated>2018-12-21T00:00:00+01:00</updated><author><name>DEEP-Hybrid-DataCloud Consortium</name></author><id>tag:None,2018-07-03:/models/deep-oc-plant-classification-theano.html</id><summary type="html">&lt;p&gt;A trained ResNet50 on Theano to classify European plants.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://jenkins.indigo-datacloud.eu:8080/job/Pipeline-as-code/job/DEEP-OC-org/job/DEEP-OC-plant-classification-theano/job/master"&gt;&lt;img alt="Build Status" src="https://jenkins.indigo-datacloud.eu:8080/buildStatus/icon?job=Pipeline-as-code/DEEP-OC-org/DEEP-OC-plant-classification-theano/master"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The deep learning revolution has brought significant advances in a number of
fields [1], primarily linked to image and speech recognition. The
standardization of image classification tasks like the ImageNet Large Scale
Visual Recognition Challenge [2] has resulted in a reliable way to compare top
performing architectures.&lt;/p&gt;
&lt;p&gt;The use of deep learning for plant classification is not novel [3, 4] but has
mainly focused in leaves and has been restricted to a limited amount of
species, therefore making it of limited use for large-scale biodiversity
monitoring purposes.&lt;/p&gt;
&lt;p&gt;This Docker container contains a trained Convolutional Neural network optimized
for plant identification using images. The architecture used is a Resnet50 [5]
using Lasagne on top of Theano.&lt;/p&gt;
&lt;p&gt;As training dataset it has been used the great collection of images which are
available in PlantNet under a Creative-Common AttributionShareAlike 2.0
license. It consists of around 250K images belonging to more than 6K plant
species of Western Europe. These species are distributed in 1500 genera and 200
families.&lt;/p&gt;
&lt;p&gt;A detailed article about this network and the results obtained with it can be found in [6].&lt;/p&gt;
&lt;h2&gt;References:&lt;/h2&gt;
&lt;p&gt;[1]: Yann LeCun, Yoshua Bengio, and Geofrey Hinton. Deep learning. Nature, 521(7553):436–444, may 2015.&lt;/p&gt;
&lt;p&gt;[2]: Olga Russakovsky et al. ImageNet Large Scale Visual Recognition Challenge. International Journal of Computer Vision (IJCV), 115(3):211–252, 2015.&lt;/p&gt;
&lt;p&gt;[3]: Sue Han Lee, Chee Seng Chan, Paul Wilkin, and Paolo Remagnino. Deep-plant: Plant identification with convolutional neural networks, 2015.&lt;/p&gt;
&lt;p&gt;[4]: Mads Dyrmann, Henrik Karstoft, and Henrik Skov Midtiby. Plant species classification using deep convolutional neural network. Biosystems Engineering, 151:72–80, 2016.&lt;/p&gt;
&lt;p&gt;[5]: He, K., Zhang, X., Ren, S., &amp;amp; Sun, J. (2016). Deep residual learning for image recognition. In Proceedings of the IEEE conference on computer vision and pattern recognition (pp. 770-778)&lt;/p&gt;
&lt;p&gt;[6]: Heredia, Ignacio. "Large-scale plant classification with deep neural networks." Proceedings of the Computing Frontiers Conference. ACM, 2017.&lt;/p&gt;</content></entry></feed>